var UserCtrl=function(e,r){var n=this;n.master={},e.findAll(),r.addEventListener("user:find_all_success",function(e,r){_findAll.success(r)}),r.addEventListener("user:find_all_error",function(e,r){_findAll.error(r)}),r.addEventListener("user:find_success",function(e,r){_find.success(r)}),r.addEventListener("user:find_error",function(e,r){_find.error(r)}),r.addEventListener("user:create_success",function(e,r){_create.success(r)}),r.addEventListener("user:create_error",function(e,r){_create.error(r)}),r.addEventListener("user:update_success",function(e,r){_update.success(r)}),r.addEventListener("user:update_error",function(e,r){_update.error(r)}),r.addEventListener("user:remove_success",function(e,r){_remove.success(r)}),r.addEventListener("user:remove_error",function(e,r){_remove.error(r)}),n.edit=function(e){delete e.pass,n.user=angular.copy(e)},n.remove=function(r){confirm("Tem certeza que deseja remover o usuário "+r.name+"?")&&e.remove(r.id)},n.roles=[{label:"Colaborador",value:"contributor"},{label:"Comissão",value:"committee"},{label:"Diretoria",value:"directorship"}],n.submit=function(){n.master=angular.copy(n.user),n.master.hasOwnProperty("id")?e.update(n.master):e.create(n.master)},n.reset=function(){n.user=angular.copy(n.master)},n.reset(),_findAll={success:function(e){console.log(e),n.users=e},error:function(e){console.warn(e)}},_find={success:function(e){n.user=e},error:function(e){console.warn(e)}},_create={success:function(e){n.message="Usuário criado com sucesso",n.users.push(e),n.user={}},error:function(e){n.message=e.message,console.warn(e)}},_update={success:function(){n.message="Usuário alterado com sucesso",e.findAll(),n.user={}},error:function(e){n.message=e.message,console.warn(e)}},_remove={success:function(){n.message="Usuário deletado com sucesso",e.findAll()},error:function(e){n.message=e.message,console.warn(e)}},r.removeEventListener("user:find_all_success",function(e,r){_findAll.success(r)}),r.removeEventListener("user:find_all_error",function(e,r){_findAll.error(r)}),r.removeEventListener("user:find_success",function(e,r){_find.success(r)}),r.removeEventListener("user:find_error",function(e,r){_find.error(r)}),r.removeEventListener("user:create_success",function(e,r){_create.success(r)}),r.removeEventListener("user:create_error",function(e,r){_create.error(r)}),r.removeEventListener("user:update_success",function(e,r){_update.success(r)}),r.removeEventListener("user:update_error",function(e,r){_update.error(r)}),r.removeEventListener("user:remove_success",function(e,r){_remove.success(r)}),r.removeEventListener("user:remove_error",function(e,r){_remove.error(r)})};angular.module("app").controller("UserCtrl",["UserModel","Notification",UserCtrl]),angular.module("app").factory("UserModel",["UserService","Notification",function(e,r){return{findAll:function(){e.findAll().then(this._handleFindAllSuccess.bind(this),this._handleFindAllError.bind(this))},_handleFindAllSuccess:function(e){r.notify("user:find_all_success",e.data)},_handleFindAllError:function(e){r.notify("user:find_all_error",e.data),console.error("UserModel : User find all error")},find:function(r){e.find(r).then(this._handleFindSuccess.bind(this),this._handleFindError.bind(this))},_handleFindSuccess:function(e){r.notify("user:find_success",e.data)},_handleFindError:function(e){r.notify("user:find_error",e.data),console.error("UserModel : User find error")},create:function(r){e.create(r).then(this._handleCreateSuccess.bind(this),this._handleCreateError.bind(this))},_handleCreateSuccess:function(e){r.notify("user:create_success",e.data)},_handleCreateError:function(e){r.notify("user:create_error",e.data),console.error("UserModel : User create error")},update:function(r){e.update(r).then(this._handleUpdateSuccess.bind(this),this._handleUpdateError.bind(this))},_handleUpdateSuccess:function(e){r.notify("user:update_success",e.data)},_handleUpdateError:function(e){r.notify("user:update_error",e.data),console.error("UserModel : User update error")},remove:function(r){e.remove(r).then(this._handleRemoveSuccess.bind(this),this._handleRemoveError.bind(this))},_handleRemoveSuccess:function(e){r.notify("user:remove_success",e.data)},_handleRemoveError:function(e){r.notify("user:remove_error",e.data),console.error("UserModel : User remove error")},errorCallback:function(e){console.error(e)}}}]),angular.module("app").factory("UserService",["$http",function(e){return{API_ROUTE:"http://localhost:8888/api/user",findAll:function(){return e.get(this.API_ROUTE).error(this.errorCallback.bind(this))},findByRole:function(){return e.post(this.API_ROUTE.concat("/role")).error(this.errorCallback.bind(this))},find:function(r){return e.get(this.API_ROUTE.concat("/").concat(r)).error(this.errorCallback.bind(this))},create:function(r){return e.post(this.API_ROUTE,r).error(this.errorCallback.bind(this))},update:function(r){return e.put(this.API_ROUTE.concat("/").concat(r.id),r).error(this.errorCallback.bind(this))},remove:function(r){return e["delete"](this.API_ROUTE.concat("/").concat(r)).error(this.errorCallback.bind(this))},unique:function(r){return e.post(this.API_ROUTE.concat("/unique"),r).error(this.errorCallback.bind(this))},errorCallback:function(e){console.error(e)}}}]);